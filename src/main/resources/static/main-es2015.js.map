{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/projects.component.ts","./src/app/components/projects.component.html","./src/app/resolvers/credentials.resolver.service.ts","./src/app/resolvers/projects.resolver.service.ts","./src/app/services/backend.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.less']\n})\nexport class AppComponent {\n  title = 'memsource';\n}\n","<router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { RouterModule, Routes } from '@angular/router';\nimport { BackendService } from './services/backend.service';\nimport { CredentialsResolverService } from './resolvers/credentials.resolver.service';\nimport { ProjectsComponent } from './components/projects.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { ProjectsResolverService } from './resolvers/projects.resolver.service';\n\n\nconst routes: Routes = [\n  {\n    path: '**',\n    redirectTo: 'projects'\n  },\n  {\n    path: 'projects',\n    component: ProjectsComponent,\n    runGuardsAndResolvers: 'always',\n    resolve: {\n      credentials: CredentialsResolverService,\n      projects: ProjectsResolverService\n    }\n  }\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ProjectsComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    NgbModule,\n    FormsModule,\n    RouterModule.forRoot(routes, { onSameUrlNavigation: 'reload' })\n  ],\n  providers: [\n    BackendService,\n    CredentialsResolverService,\n    ProjectsResolverService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Credentials } from '../models/credentials';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { BackendService } from '../services/backend.service';\nimport { Project } from '../models/project';\n\n@Component({\n  selector: 'projects-page',\n  templateUrl: './projects.component.html',\n  styleUrls: ['./projects.component.less']\n})\nexport class ProjectsComponent implements OnInit {\n\n  cannotSignInErrorVisible: boolean;\n\n  projects: Project[];\n  credentials: Credentials;\n  newCredentials: Credentials;\n\n  constructor(private router: Router,\n              private route: ActivatedRoute,\n              private modalService: NgbModal,\n              private backendService: BackendService) {\n  }\n\n  ngOnInit(): void {\n    this.route.data.subscribe((data: { credentials: Credentials, projects: Project[] }) => {\n      this.credentials = data.credentials;\n      this.newCredentials = { username: this.credentials.username } as Credentials;\n      this.projects = data.projects;\n      this.cannotSignInErrorVisible = false;\n    });\n  }\n\n  isSignedIn(): boolean {\n    return !!this.credentials.username;\n  }\n\n  signInAs() {\n    this.backendService.updateCredentials(this.newCredentials).subscribe(res => {\n      this.router.navigate(['projects']);\n      this.modalService.dismissAll();\n    }, err => {\n      this.cannotSignInErrorVisible = true;\n    });\n  }\n\n  signOut() {\n    this.backendService.removeCredentials().subscribe(res => {\n      this.router.navigate(['projects']);\n    });\n  }\n\n  open(content) {\n    this.modalService.open(content, { ariaLabelledBy: 'modal-basic-title' }).result.then(\n      result => {\n      },\n      reason => {\n      }\n    );\n  }\n}\n","<nav class=\"navbar navbar-expand navbar-light bg-light\">\n  <a class=\"navbar-brand\">Memsource Projects</a>\n  <ul class=\"navbar-nav ml-auto\">\n    <li class=\"nav-item\" ngbDropdown>\n      <a class=\"nav-link\" style=\"cursor: pointer\" ngbDropdownToggle id=\"navbarDropdown2\" role=\"button\">\n        <span *ngIf=\"isSignedIn()\">{{credentials.username}}</span>\n        <span *ngIf=\"!isSignedIn()\">Sing in</span>\n      </a>\n      <div ngbDropdownMenu aria-labelledby=\"navbarDropdown2\" class=\"dropdown-menu dropdown-menu-right\">\n        <a role=\"button\" ngbDropdownItem (click)=\"open(content)\">Sign in as...</a>\n        <a *ngIf=\"isSignedIn()\" role=\"button\" ngbDropdownItem (click)=\"signOut()\">Sign out</a>\n      </div>\n    </li>\n  </ul>\n\n</nav>\n\n<ng-template #content let-modal>\n  <div class=\"modal-header\">\n    <h4 class=\"modal-title\" id=\"modal-basic-title\">Provide Memsource Credentials</h4>\n    <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modal.dismiss()\">\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n  </div>\n  <div class=\"modal-body\">\n    <p *ngIf=\"cannotSignInErrorVisible\">\n      <ngb-alert type=\"danger\" [dismissible]=\"false\">Can't sign in using provided credentials</ngb-alert>\n    </p>\n    <form>\n      <div class=\"form-group\">\n        <label for=\"username\">Username</label>\n        <div class=\"input-group\">\n          <input id=\"username\" [(ngModel)]=\"newCredentials.username\" class=\"form-control\" name=\"username\">\n        </div>\n\n        <label for=\"password\">Password</label>\n        <div class=\"input-group\">\n          <input id=\"password\" [(ngModel)]=\"newCredentials.password\" type=\"password\" class=\"form-control\"\n                 name=\"password\">\n        </div>\n      </div>\n    </form>\n  </div>\n  <div class=\"modal-footer\">\n    <button type=\"button\" class=\"btn btn-outline-dark\" (click)=\"signInAs()\">Sign in</button>\n  </div>\n</ng-template>\n\n<div class=\"container\">\n  <div class=\"row\">\n    <div class=\"col\"></div>\n    <div *ngIf=isSignedIn() class=\"col-lg-8 projects-container\">\n      <ng-container *ngFor=\"let proj of projects\">\n        <div class=\"project-container\">\n          <h3 class=\"project-container__title\">{{proj.name}}</h3><span>({{proj.status}})</span>\n          <div class=\"project-container__translations-info\"><span>Original language: </span> <b>{{proj.sourceLang}}</b>\n          </div>\n          <div class=\"project-container__translations-info\">\n            <span>Translations: </span>\n            <span *ngFor=\"let tl of proj.targetLangs; let isLast=last\">\n              <b>{{tl}}</b>{{isLast ? '' : ', '}}\n          </span>\n          </div>\n        </div>\n      </ng-container>\n    </div>\n    <div *ngIf=\"isSignedIn() && projects.length == 0\" class=\"col-lg-12 info-container\">\n      <p>No projects for this account</p>\n    </div>\n\n    <div *ngIf=\"!isSignedIn()\" class=\"col-lg-12 info-container\">\n      <p>No valid credentials provided</p>\n    </div>\n    <div class=\"col\"></div>\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from '@angular/router';\nimport { Observable, of } from 'rxjs';\nimport { Credentials } from '../models/credentials';\nimport { BackendService } from '../services/backend.service';\nimport { catchError } from 'rxjs/operators';\n\n\n@Injectable()\nexport class CredentialsResolverService implements Resolve<Credentials> {\n  constructor(private backendService: BackendService) {\n  }\n\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<Credentials> {\n    return this.backendService.loadCredentials()\n      .pipe(catchError(err => {\n        return of({} as Credentials);\n      }));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from '@angular/router';\nimport { Observable, of } from 'rxjs';\nimport { BackendService } from '../services/backend.service';\nimport { Project } from '../models/project';\nimport { catchError, map } from 'rxjs/operators';\n\n\n@Injectable()\nexport class ProjectsResolverService implements Resolve<Project[]> {\n  constructor(private backendService: BackendService) {\n  }\n\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<Project[]> {\n    return this.backendService.loadProjects().pipe(map(p => p)).pipe(catchError(err => {\n      if (err.status == 401) {\n        return of([])\n      } else {\n        throw err;\n      }\n    }));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Credentials } from '../models/credentials';\nimport { Project } from '../models/project';\n\n@Injectable()\nexport class BackendService {\n\n  constructor(private httpClient: HttpClient) {\n  }\n\n  loadCredentials(): Observable<Credentials> {\n    return this.httpClient.get<Credentials>('/api/credentials');\n  }\n\n  updateCredentials(credentials: Credentials): Observable<any> {\n    return this.httpClient.put('/api/credentials',\n      { username: credentials.username, password: credentials.password }\n    );\n  }\n\n  removeCredentials(): Observable<any> {\n    return this.httpClient.delete('/api/credentials');\n  }\n\n  loadProjects(): Observable<Project[]> {\n    return this.httpClient.get<Project[]>('/api/projects');\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}